@mixin center-xy {
  display: flex;
  justify-content: center;
  align-items: center;
}

$flex-map: (
  start: flex-start,
  end: flex-end,
  between: space-between,
  around: space-around,
  stretch: stretch,
  center: center,
);

@function _get-flex-value($key) {
  @return map-get($flex-map, $key);
}

// @inclue flex(between)
// @inclue flex(between, start)

@mixin flex($jc: center, $ai: center, $way: row) {
  display: flex;
  align-items: _get-flex-value($ai);
  justify-content: _get-flex-value($jc);
  flex-direction: $way;
}

@mixin text-style($size, $color: false) {
  @if ($size== xs) {
    font-size: 1.2rem;
    line-height: 1.6rem;
  }

  @if ($size== sm) {
    font-size: 1.4rem;
    line-height: 2rem;
  }

  @if ($size== rg) {
    font-size: 1.8rem;
    line-height: 2.4rem;
  }

  @if ($size== md) {
    font-size: 2rem;
    line-height: 2.8rem;
  }

  @if ($size== lg) {
    font-size: 2.4rem;
    line-height: 3.2rem;
  }

  @if ($size== xl) {
    font-size: 4.8rem;
    line-height: 1;
  }

  @if (type-of($color) == color) {
    color: $color;
  }
}

//   @include responsive(D)
//   @include responsive(T)

/* responsive */
@mixin responsive($screen) {
  @if ($screen == T) {
    /* 태블릿 */
    @media screen and (min-width: $md-breakpoint) {
      @content;
    }
  }

  @if ($screen == D) {
    /* 데스크탑 */
    @media screen and (min-width: $lg-breakpoint) {
      @content;
    }
  }
}

@mixin mobile-only() {
  /* 모바일 */
  @media screen and (max-width: $md-breakpoint-1px) {
    @content;
  }
}

@mixin clearfix {
  &:after {
    content: '';
    display: block;
    clear: both;
  }
}

@mixin ani-hover {
  img {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 100%;
    min-height: 100%;
    transition: transform $ani-duration;
  }

  &:hover img {
    transform: translate(-50%, -50%) scale(1.05);
  }
}
